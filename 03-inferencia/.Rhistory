knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(resample) # <-- Para bootstrap!
library(tidyverse)
library(here)
library(learnr) # <-- Para que esse tutorial seja interativo
install.packages("learnr")
install.packages("boot")
library(tidyverse)
library(here)
library(learnr) # <-- Para que esse tutorial seja interativo
library(boot) # <-- Para bootstrap
knitr::opts_chunk$set(echo = FALSE)
theme_set(theme_bw())
amostra = read_csv(here("exercicio-bootstrap/sample-lastfm.csv"), col_types = "cddii")
dados = amostra
##################################
# **Este notebook é um tutorial interativo. Clique em `Run Document` em cima e à esquerda no RStudio**
##################################
set.seed(1234)
populacao1 = tibble(participante = 1:10000,
tempo_no_site = 100 * rweibull(10000, 1, 1))
glimpse(populacao1)
populacao1 %>%
ggplot(aes(x = tempo_no_site)) +
geom_histogram(binwidth = 10)
summary(populacao1$tempo_no_site)
uma_amostra = sample_n(populacao1, 100)
glimpse(uma_amostra)
funcao_bootstrap <- function(dado, indices){
d = dado %>%
slice(indices) %>% # slice(x, c(1, 4, 5)) retorna um vetor com os elementos nos índices 1, 4 e 5 de x
pull(tempo_no_site)         # tempo_no_site é o nome da variável que nos interessa
return(mean(d))
}
bootstraps <- boot(data = uma_amostra,
statistic = funcao_bootstrap, # <- referência para a função
R = 2000) # número de bootstraps
glimpse(bootstraps$t)
tibble(estatistica = as.double(bootstraps$t)) %>%
ggplot(aes(x = estatistica)) +
geom_histogram(binwidth = 2, fill = "white", color = "pink")
diferencas = tibble(dif = as.double(bootstraps$t) - mean(uma_amostra$tempo_no_site))
diferencas %>%
ggplot(aes(x = dif)) +
geom_histogram(binwidth = 2, fill = "white", color = "pink") +
geom_vline(xintercept = quantile(diferencas$dif, 0.025)[[1]]) +
geom_vline(xintercept = quantile(diferencas$dif, 0.975)[[1]])
boot.ci(bootstraps, conf = 0.95, type = "basic")
set.seed(1234)
grupo1 = tibble(participante = 1:10000,
grupo = "a",
tempo_no_site = 100 * rweibull(10000, 1, 1))
grupo2 = tibble(participante = 1:10000,
grupo = "b",
tempo_no_site = 100 * rweibull(10000, 1, 1.3))
populacao2 = bind_rows(grupo1, grupo2)
glimpse(populacao2)
populacao2 %>%
ggplot(aes(x = tempo_no_site, color = grupo)) +
geom_density()
populacao2 %>%
group_by(grupo) %>%
summarise_all(funs(mean, median))
set.seed(123)
amostra_2grupos = sample_n(populacao2, 150)
amostra_2grupos %>%
group_by(grupo) %>%
summarise_all(funs(mean, median))
funcao_bootstrap <- function(dado, indices){
d = dado %>%
slice(indices) %>%
group_by(grupo) %>%
summarise(media_grupo = mean(tempo_no_site)) %>%
pull(media_grupo)
return(d[1] - d[2])
}
bootstraps <- boot(data = amostra_2grupos,
statistic = funcao_bootstrap, # <- referência para a função
R = 2000) # número de bootstraps
glimpse(bootstraps$t)
boot.ci(bootstraps, conf = 0.95, type = "basic")
set.seed(1234)
grupo1 = tibble(participante = 1:10000,
grupo = "a",
tempo_no_site = 100 * rweibull(10000, 1, 1))
grupo2 = tibble(participante = 1:10000,
grupo = "b",
tempo_no_site = 100 * rweibull(10000, 1, 1.3))
populacao2 = bind_rows(grupo1, grupo2)
glimpse(populacao2)
populacao2 %>%
ggplot(aes(x = tempo_no_site, color = grupo)) +
geom_density()
populacao2 %>%
group_by(grupo) %>%
summarise_all(funs(mean, median))
dados %>%
glimpse()
dados %>%
ggplot(aes(x = news)) +
geom_histogram(binwidth = 20, fill = "darkblue")
dados %>%
ggplot(aes(x = old)) +
geom_histogram(binwidth = 20, fill = "orange")
dados %>%
ggplot(aes(x = ecletic)) +
geom_histogram(binwidth = 500, fill = "brown")
dados %>%
ggplot(aes(x = media_pop)) +
geom_histogram(binwidth = .25, fill = "darkgreen")
funcao_bootstrap <- function(dado, indices){
d = dado %>%
slice(indices) %>% # slice(x, c(1, 4, 5)) retorna um vetor com os elementos nos índices 1, 4 e 5 de x
pull(news)         # news é o nome da variável que nos interessa
return(mean(d))
}
bootstraps <- boot(data = amostra,
statistic = funcao_bootstrap, # <- referência para a função
R = 2000) # número de bootstraps
glimpse(bootstraps$t)
tibble(estatistica = as.double(bootstraps$t)) %>%
ggplot(aes(x = estatistica)) +
geom_histogram(binwidth = .1, fill = "white", color = "darkred")
boot.ci(bootstraps, conf = 0.95, type = "basic")
amostra = amostra %>%
mutate(diferenca = news/2 - old/2)
amostra = amostra %>%
filter(media_pop > 5.74 | media_pop < 5.2) %>%  # <- deixa apenas os extremos
mutate(gosta_de_pop = media_pop > 5.7)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(GGally)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(GGally)
installed.packages('GGally')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(GGally)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
theme_set(theme_bw())
lastfm = read_csv(here("dados/experimento-lastfm.csv"),
col_types = cols(.default = col_double(),
user = col_character()))
glimpse(lastfm)
lastfm = select(lastfm, news, ecletic)
lastfm %>% ggplot(aes(news)) + geom_histogram(binwidth = 10)
lastfm %>% ggplot(aes(ecletic)) + geom_histogram(binwidth = 100)
sample(lastfm$news, 100) %>% mean()
sample(lastfm$news, 100) %>% mean()
sample(lastfm$news, 100) %>% mean()
set.seed(1)
amostras = data.frame(amostra = 1:1000) %>% # faremos 1000 vezes
mutate(media = map_dbl(amostra, ~ lastfm %>%
pull(news) %>%
sample(100) %>%
mean()))
amostras
amostras %>%
ggplot(aes(media)) +
geom_histogram(binwidth = .5, fill = "white", colour = "darkgrey") +
geom_vline(xintercept = mean(lastfm$news)) # média calculada com todos os dados
amostras = data.frame(amostra = 1:1000) %>% # faremos 1000 vezes
mutate(media = map_dbl(amostra, ~ lastfm %>%
pull(news) %>%
sample(10) %>%
mean()))
amostras
amostras %>%
ggplot(aes(media)) +
geom_histogram(binwidth = .5, fill = "white", colour = "darkgrey") +
geom_vline(xintercept = mean(lastfm$news)) # média calculada com todos os dados
amostras = data.frame(amostra = 1:1000) %>% # faremos 1000 vezes
mutate(estatistica = map_dbl(amostra, ~ lastfm %>%
pull(news) %>%
sample(100) %>%
median()))
amostras
amostras %>%
ggplot(aes(estatistica)) +
geom_histogram(binwidth = .5, fill = "white", colour = "darkgrey") +
geom_vline(xintercept = median(lastfm$news)) # média calculada com todos os dados
amostra = lastfm %>%
sample_n(200) %>%
pull(news)
media_amostra = mean(amostra)
repeticoes = 4000 # pelo menos 2000, mas mais não faz mal.
exp_com_bootstrap <- function(x){
boot_x <- sample(x,
size = NROW(x),
replace = TRUE) # aqui é o bootstrap, o replace TRUE faz com elementos possam ser repetido por exemplo: 3,5,5.
return(mean(boot_x))
}
# Agora o input das reamostragens é a amostra!
experimentos = data_frame(i = 1:repeticoes) %>%
rowwise() %>%
mutate(media_exp = exp_com_bootstrap(amostra)) %>%  # <- Aqui!
ungroup()
ggplot(experimentos, aes(x = media_exp)) +
geom_histogram(binwidth = 1, colour = "darkorange", fill = "white")
summary(experimentos)
# IC com 90%:
alpha = .1
quantile(experimentos$media_exp,
probs = c(.05, .95))
cis = experimentos %>%
mutate(diferenca = media_exp - media_amostra) %>%
summarise(l = quantile(diferenca, alpha/2),
u = quantile(diferenca, 1 - alpha/2)) %>%
mutate(ci_lower = media_amostra - u,
ci_upper = media_amostra - l)
ggplot(experimentos, aes(x = media_exp)) +
geom_histogram(binwidth = 1, colour = "darkorange", fill = "white") +
geom_vline(aes(xintercept = cis$ci_lower), colour = "blue", size = 1.5) +
geom_vline(aes(xintercept = cis$ci_upper), colour = "blue", size = 1.5) +
geom_vline(aes(xintercept = media_amostra), colour = "green") +
geom_vline(aes(xintercept = mean(lastfm$news)), colour = "red")
# IC com 95%:
alpha2 = .05
cis2 = experimentos %>%
mutate(diferenca = media_exp - media_amostra) %>%
summarise(l = quantile(diferenca, alpha2/2),
u = quantile(diferenca, 1 - alpha2/2)) %>%
mutate(ci_lower = media_amostra - u,
ci_upper = media_amostra - l)
ggplot(experimentos, aes(x = media_exp)) +
geom_histogram(binwidth = 1, colour = "pink", fill = "white") +
geom_vline(aes(xintercept = cis$ci_lower), colour = "blue") +
geom_vline(aes(xintercept = cis$ci_upper), colour = "blue") +
geom_vline(aes(xintercept = cis2$ci_lower), colour = "purple", size = 2) +
geom_vline(aes(xintercept = cis2$ci_upper), colour = "purple", size = 2) +
geom_vline(aes(xintercept = media_amostra), colour = "green")
experimentos = data_frame(i = 1:repeticoes) %>%
rowwise() %>%
mutate(media_exp = exp_com_bootstrap(amostra)) %>%  # <- Aqui!
ungroup()
experimentos = data_frame(i = 1:repeticoes) %>%
rowwise() %>%
mutate(media_exp = exp_com_bootstrap(amostra)) %>%  # <- Aqui!
ungroup()
ggplot(experimentos, aes(x = media_exp)) +
geom_histogram(binwidth = 1, colour = "darkorange", fill = "white")
summary(experimentos)
ggplot(experimentos, aes(x = media_exp)) +
geom_histogram(binwidth = 1, colour = "darkorange", fill = "white")
summary(experimentos)
experimentos
quantile(experimentos$media_exp,
probs = c(.05, .95))
experimentos = data_frame(i = 1:repeticoes) %>%
rowwise()
experimentos = data_frame(i = 1:repeticoes) %>%
rowwise()
experimentos = data_frame(i = 1:repeticoes) %>%
rowwise()
experimentos = data_frame(i = 1:repeticoes) %>%
rowwise()
ggplot(experimentos, aes(x = media_exp)) +
geom_histogram(binwidth = 1, colour = "darkorange", fill = "white")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
theme_set(theme_bw())
lastfm = read_csv(here("dados/experimento-lastfm.csv"),
col_types = cols(.default = col_double(),
user = col_character()))
glimpse(lastfm)
lastfm = select(lastfm, news, ecletic)
lastfm %>% ggplot(aes(news)) + geom_histogram(binwidth = 10)
lastfm %>% ggplot(aes(ecletic)) + geom_histogram(binwidth = 100)
sample(lastfm$news, 100) %>% mean()
sample(lastfm$news, 100) %>% mean()
sample(lastfm$news, 100) %>% mean()
set.seed(1)
amostras = data.frame(amostra = 1:1000) %>% # faremos 1000 vezes
mutate(media = map_dbl(amostra, ~ lastfm %>%
pull(news) %>%
sample(100) %>%
mean()))
amostras
amostras %>%
ggplot(aes(media)) +
geom_histogram(binwidth = .5, fill = "white", colour = "darkgrey") +
geom_vline(xintercept = mean(lastfm$news)) # média calculada com todos os dados
amostras = data.frame(amostra = 1:1000) %>% # faremos 1000 vezes
mutate(media = map_dbl(amostra, ~ lastfm %>%
pull(news) %>%
sample(10) %>%
mean()))
amostras
amostras %>%
ggplot(aes(media)) +
geom_histogram(binwidth = .5, fill = "white", colour = "darkgrey") +
geom_vline(xintercept = mean(lastfm$news)) # média calculada com todos os dados
amostras = data.frame(amostra = 1:1000) %>% # faremos 1000 vezes
mutate(estatistica = map_dbl(amostra, ~ lastfm %>%
pull(news) %>%
sample(100) %>%
median()))
amostras
amostras %>%
ggplot(aes(estatistica)) +
geom_histogram(binwidth = .5, fill = "white", colour = "darkgrey") +
geom_vline(xintercept = median(lastfm$news)) # média calculada com todos os dados
amostra = lastfm %>%
sample_n(200) %>%
pull(news)
media_amostra = mean(amostra)
repeticoes = 4000 # pelo menos 2000, mas mais não faz mal.
exp_com_bootstrap <- function(x){
boot_x <- sample(x,
size = NROW(x),
replace = TRUE) # aqui é o bootstrap, o replace TRUE faz com elementos possam ser repetido por exemplo: 3,5,5.
return(mean(boot_x))
}
# Agora o input das reamostragens é a amostra!
experimentos = data_frame(i = 1:repeticoes) %>%
rowwise() %>%
mutate(media_exp = exp_com_bootstrap(amostra)) %>%  # <- Aqui!
ungroup()
ggplot(experimentos, aes(x = media_exp)) +
geom_histogram(binwidth = 1, colour = "darkorange", fill = "white")
summary(experimentos)
# IC com 90%:
alpha = .1
quantile(experimentos$media_exp,
probs = c(.05, .95))
cis = experimentos %>%
mutate(diferenca = media_exp - media_amostra) %>%
summarise(l = quantile(diferenca, alpha/2),
u = quantile(diferenca, 1 - alpha/2)) %>%
mutate(ci_lower = media_amostra - u,
ci_upper = media_amostra - l)
ggplot(experimentos, aes(x = media_exp)) +
geom_histogram(binwidth = 1, colour = "darkorange", fill = "white") +
geom_vline(aes(xintercept = cis$ci_lower), colour = "blue", size = 1.5) +
geom_vline(aes(xintercept = cis$ci_upper), colour = "blue", size = 1.5) +
geom_vline(aes(xintercept = media_amostra), colour = "green") +
geom_vline(aes(xintercept = mean(lastfm$news)), colour = "red")
# IC com 95%:
alpha2 = .05
cis2 = experimentos %>%
mutate(diferenca = media_exp - media_amostra) %>%
summarise(l = quantile(diferenca, alpha2/2),
u = quantile(diferenca, 1 - alpha2/2)) %>%
mutate(ci_lower = media_amostra - u,
ci_upper = media_amostra - l)
ggplot(experimentos, aes(x = media_exp)) +
geom_histogram(binwidth = 1, colour = "pink", fill = "white") +
geom_vline(aes(xintercept = cis$ci_lower), colour = "blue") +
geom_vline(aes(xintercept = cis$ci_upper), colour = "blue") +
geom_vline(aes(xintercept = cis2$ci_lower), colour = "purple", size = 2) +
geom_vline(aes(xintercept = cis2$ci_upper), colour = "purple", size = 2) +
geom_vline(aes(xintercept = media_amostra), colour = "green")
cis = experimentos %>%
mutate(diferenca = media_exp - media_amostra) %>%
summarise(l = quantile(diferenca, alpha/2),
u = quantile(diferenca, 1 - alpha/2)) %>%
mutate(ci_lower = media_amostra - u,
ci_upper = media_amostra - l)
cis
cis = experimentos %>%
mutate(diferenca = media_exp - media_amostra) %>%
summarise(l = quantile(diferenca, alpha/2),
u = quantile(diferenca, 1 - alpha/2))
cis
population %>%
ggplot(aes(x = data)) +
geom_histogram(bins = 50, fill = "white", color = "orange") +
geom_vline(xintercept = mean(population$data), colour = "darkblue") +
geom_text(aes(x = mean(data) + 30, y = 1500, label = "Média"))
library(tidyverse)
theme_set(theme_minimal())
population = tibble(data = rweibull(1e4, shape = 1, scale = 100))
population %>%
ggplot(aes(x = data)) +
geom_histogram(bins = 50, fill = "white", color = "orange") +
geom_vline(xintercept = mean(population$data), colour = "darkblue") +
geom_text(aes(x = mean(data) + 30, y = 1500, label = "Média"))
mean(population$data)
set.seed(123)
n = 100
medias = tibble(i = 1:1000) %>%
group_by(i) %>%
do(tibble(media = mean(sample(population$data, n)))) %>%
ungroup()
medias$tipo = "Dist. amostral"
medias %>%
ggplot(aes(x = media)) +
geom_histogram(bins = 50, fill = "white", color = "darkred") +
geom_vline(xintercept = mean(population$data), colour = "darkblue") +
geom_text(aes(x = mean(population$data) + 10, y = 50, label = "Média da população"))
set.seed(123)
amostra_no_experimento = sample(population$data, n)
mean(amostra_no_experimento)
medias %>%
ggplot(aes(x = media)) +
geom_histogram(bins = 50, fill = "white", color = "grey") +
geom_vline(xintercept = mean(population$data), colour = "darkblue") +
geom_text(aes(x = mean(population$data) + 10, y = 50, label = "Média da população")) +
geom_vline(xintercept = mean(amostra_no_experimento), colour = "red") +
geom_text(aes(x = mean(amostra_no_experimento) -5, y = 55, label = "Média da amostra"))
set.seed(123)
medias_bootstrap = tibble(i = 1:2000) %>%
group_by(i) %>%
do(tibble(media = mean(sample(amostra_no_experimento,
NROW(amostra_no_experimento),
replace = TRUE)))) %>%
ungroup()
medias_bootstrap$tipo = "Dist. bootstrap"
rbind(medias, medias_bootstrap) %>%
ggplot(aes(x = media, colour = tipo)) +
geom_histogram(bins = 50, fill = "white") +
facet_grid(tipo ~ .) +
geom_vline(xintercept = mean(population$data), colour = "darkblue") +
#geom_text(aes(x = mean(population$data) + 10, y = 50, label = "Média da população"), colour = "darkblue") +
geom_vline(xintercept = mean(amostra_no_experimento), colour = "red")
#geom_text(aes(x = mean(amostra_no_experimento) -5, y = 55, label = "Média da amostra"), colour = "red")
population = tibble(data = rweibull(1e4, shape = 1, scale = 100))
population = tibble(data = rweibull(1e4, shape = 1, scale = 100))
population %>%
ggplot(aes(x = data)) +
geom_histogram(bins = 50, fill = "white", color = "orange") +
geom_vline(xintercept = mean(population$data), colour = "darkblue") +
geom_text(aes(x = mean(data) + 30, y = 1500, label = "Média"))
mean(population$data)
```{r setup, include=FALSE}
library(tidyverse)
library(resample) # para bootstrap
theme_set(theme_bw())
install.packages('resample')
library(tidyverse)
library(resample) # para bootstrap
theme_set(theme_bw())
lastfm = read_csv(here("dados/experimento-lastfm.csv"),
col_types = cols(.default = col_double(),
user = col_character()))
glimpse(lastfm)
lastfm = select(lastfm, news, ecletic) %>%
filter(complete.cases(lastfm))
lastfm %>% ggplot(aes(news)) + geom_histogram(binwidth = 10)
lastfm %>% ggplot(aes(ecletic)) + geom_histogram(binwidth = 100)
onerun = function(dado, n) {
experiment = sample(dado, n)
b = bootstrap(experiment, mean, R = 2000)
ci.from.bca = CI.bca(b, probs = c(.025, .975))
ci.from.percentile = CI.percentile(b, probs = c(.025, .975))
return(tibble(type = c("bca", "percentile"),
lower = c(ci.from.bca[1], ci.from.percentile[1]),
upper = c(ci.from.bca[2], ci.from.percentile[2])))
}
cobertura = function(dado, sample_size, experiments = 2000){
cis = tibble(experimento = 1:experiments) %>%
group_by(experimento) %>%
do(onerun(dado, sample_size))
}
set.seed(123)
data = lastfm$ecletic
experimento_cobertura = cobertura(data,
sample_size = 200,
experiments = 100)
cis_com_cobertura = experimento_cobertura %>%
mutate(acertou = mean(data) <= upper & mean(data) >= lower)
cis_com_cobertura %>%
ggplot(aes(x = experimento, ymax = upper, ymin = lower, color = acertou)) +
geom_hline(yintercept = mean(data)) +
geom_errorbar() +
facet_grid(. ~ type)
experimento_cobertura_grande = cobertura(data, sample_size = 200, experiments = 1000)
experimento_cobertura_grande %>%
mutate(acertou = mean(data) < upper & mean(data) > lower) %>%
group_by(type, acertou) %>%
summarise(n = n()) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = acertou, y = prop)) +
geom_col() +
geom_hline(yintercept = 0.05) +
facet_grid(. ~ type)
set.seed(123)
data = lastfm$news
experimento_cobertura = cobertura(data, 200, 100)
cis_com_cobertura = experimento_cobertura %>%
mutate(acertou = mean(data) < upper & mean(data) > lower)
cis_com_cobertura %>%
ggplot(aes(x = experimento, ymax = upper, ymin = lower, color = acertou)) +
geom_hline(yintercept = mean(data)) +
geom_errorbar() +
facet_grid(. ~ type)
experimento_cobertura_grande = cobertura(data, sample_size = 200, experiments = 1000)
experimento_cobertura_grande %>%
mutate(acertou = mean(data) < upper & mean(data) > lower) %>%
group_by(type, acertou) %>%
summarise(n = n()) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = acertou, y = prop)) +
geom_col() +
geom_hline(yintercept = 0.05) +
facet_grid(. ~ type)
library(tidyverse)
library(resample) # para bootstrap
theme_set(theme_bw())
lastfm = read_csv(here("dados/experimento-lastfm.csv"),
col_types = cols(.default = col_double(),
user = col_character()))
glimpse(lastfm)
lastfm = select(lastfm, news, ecletic) %>%
filter(complete.cases(lastfm))
lastfm %>% ggplot(aes(news)) + geom_histogram(binwidth = 10)
lastfm %>% ggplot(aes(ecletic)) + geom_histogram(binwidth = 100)
